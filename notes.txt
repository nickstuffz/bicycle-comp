API Design:
    Endpoints:
    
    Searching all component codes to filter available results
        READ(component code)
        GET
        response: [code1, code2, ...]
        
    Find compatible components
        READ(component code)
        GET 
        response: [
            {part1},{part2}, ...
        ]
        each part has source pod id / name,
            pod id / name,
            code,
            category,
            status,
            link,
            note,
            warning
            
        sort and display on front end
        

    Future Endpoints:
        CREATE user build
         - user info, build info, components in build
        UPDATE user build
         - user info, build info, components in build        
        DELETE user build
         - user info, build info, components in build

Now:

Todo:
How to remove db folder on deploy? using .dockerignore
How to add type checking and schema? Ensure data is in right format, Zod or TS
User authenticated build page
Recheck table indexing optimization
Add block-level notes?
How to handle 1x drivetrain parts? Not connected to an FD / shifter but would still work with shifters as brakes.

Long Term:
Unspecified note resolve?

Reminders:

https://sqlformat.darold.net/
